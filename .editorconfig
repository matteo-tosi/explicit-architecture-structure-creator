
#JSON files
[*.ts]
indent_size = 2
indent_style = space
tab_width = 2

# Typescript files
[*.ts]
indent_size = 4
indent_style = space
tab_width = 4
end_of_line = crlf
insert_final_newline = true

# C# files
[*.cs]

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4

# New line preferences
end_of_line = crlf
insert_final_newline = false

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = false

# this. and Me. preferences
dotnet_style_qualification_for_event = true:error
dotnet_style_qualification_for_field = false:error
dotnet_style_qualification_for_method = true:error
dotnet_style_qualification_for_property = true:error

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:error
dotnet_style_predefined_type_for_member_access = true:error

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:error
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:error
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:error
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:error

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent

# Expression-level preferences
dotnet_style_coalesce_expression = true:error
dotnet_style_collection_initializer = true:error
dotnet_style_explicit_tuple_names = true:error
dotnet_style_null_propagation = true:error
dotnet_style_object_initializer = true:error
dotnet_style_prefer_auto_properties = true:error
dotnet_style_prefer_compound_assignment = true:error
dotnet_style_prefer_conditional_expression_over_assignment = false:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:error
dotnet_style_prefer_inferred_tuple_names = true:error
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:error

# Field preferences
dotnet_style_readonly_field = true:error

# Parameter preferences
dotnet_code_quality_unused_parameters = all:error

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = true:error
csharp_style_var_for_built_in_types = false:silent
csharp_style_var_when_type_is_apparent = true:error

# Expression-bodied members
csharp_style_expression_bodied_accessors = true:error
csharp_style_expression_bodied_constructors = false:error
csharp_style_expression_bodied_indexers = true:error
csharp_style_expression_bodied_lambdas = true:error
csharp_style_expression_bodied_local_functions = false:error
csharp_style_expression_bodied_methods = when_on_single_line:error
csharp_style_expression_bodied_operators = false:error
csharp_style_expression_bodied_properties = when_on_single_line:error

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:error
csharp_style_pattern_matching_over_is_with_cast_check = true:error
csharp_style_prefer_switch_expression = false:error

# Null-checking preferences
csharp_style_conditional_delegate_call = true:error

# Modifier preferences
csharp_prefer_static_local_function = true:error
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# Code-block preferences
csharp_prefer_braces = true:error
csharp_prefer_simple_using_statement = false:error

# Expression-level preferences
csharp_prefer_simple_default_expression = true:error
csharp_style_deconstructed_variable_declaration = true:error
csharp_style_inlined_variable_declaration = true:error
csharp_style_pattern_local_over_anonymous_function = true:error
csharp_style_prefer_index_operator = true:error
csharp_style_prefer_range_operator = true:error
csharp_style_throw_expression = true:error
csharp_style_unused_value_assignment_preference = discard_variable:error
csharp_style_unused_value_expression_statement_preference = discard_variable:error

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:error

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### Naming styles ####

# Naming rules

dotnet_naming_rule.interfaccia_should_be_inizia_con_i.severity = error
dotnet_naming_rule.interfaccia_should_be_inizia_con_i.symbols = interfaccia
dotnet_naming_rule.interfaccia_should_be_inizia_con_i.style = inizia_con_i

dotnet_naming_rule.tipi_should_be_pascalcase.severity = error
dotnet_naming_rule.tipi_should_be_pascalcase.symbols = tipi
dotnet_naming_rule.tipi_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.membri_non_di_campo_should_be_pascalcase.severity = error
dotnet_naming_rule.membri_non_di_campo_should_be_pascalcase.symbols = membri_non_di_campo
dotnet_naming_rule.membri_non_di_campo_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.campo_costante_should_be_costants_name.severity = error
dotnet_naming_rule.campo_costante_should_be_costants_name.symbols = campo_costante
dotnet_naming_rule.campo_costante_should_be_costants_name.style = costants_name

dotnet_naming_rule.campo_privato_o_interno_should_be__globalfield.severity = error
dotnet_naming_rule.campo_privato_o_interno_should_be__globalfield.symbols = campo_privato_o_interno
dotnet_naming_rule.campo_privato_o_interno_should_be__globalfield.style = _globalfield

dotnet_naming_rule.classe_should_be_pascalcase.severity = error
dotnet_naming_rule.classe_should_be_pascalcase.symbols = classe
dotnet_naming_rule.classe_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.struct_should_be_pascalcase.severity = error
dotnet_naming_rule.struct_should_be_pascalcase.symbols = struct
dotnet_naming_rule.struct_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.enumerazione_should_be_pascalcase.severity = error
dotnet_naming_rule.enumerazione_should_be_pascalcase.symbols = enumerazione
dotnet_naming_rule.enumerazione_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.metodo_should_be_pascalcase.severity = error
dotnet_naming_rule.metodo_should_be_pascalcase.symbols = metodo
dotnet_naming_rule.metodo_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.metodo_privato_should_be_pascalcase.severity = error
dotnet_naming_rule.metodo_privato_should_be_pascalcase.symbols = metodo_privato
dotnet_naming_rule.metodo_privato_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.metodo_astratto_should_be_pascalcase.severity = error
dotnet_naming_rule.metodo_astratto_should_be_pascalcase.symbols = metodo_astratto
dotnet_naming_rule.metodo_astratto_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.proprietà_should_be_pascalcase.severity = error
dotnet_naming_rule.proprietà_should_be_pascalcase.symbols = proprietà
dotnet_naming_rule.proprietà_should_be_pascalcase.style = pascalcase

# Symbol specifications

dotnet_naming_symbols.classe.applicable_kinds = class
dotnet_naming_symbols.classe.applicable_accessibilities = public, internal, private, protected, protected_internal
dotnet_naming_symbols.classe.required_modifiers = abstract, static

dotnet_naming_symbols.interfaccia.applicable_kinds = interface
dotnet_naming_symbols.interfaccia.applicable_accessibilities = public, internal, private, protected, protected_internal
dotnet_naming_symbols.interfaccia.required_modifiers = 

dotnet_naming_symbols.struct.applicable_kinds = struct
dotnet_naming_symbols.struct.applicable_accessibilities = public, internal, private, protected, protected_internal
dotnet_naming_symbols.struct.required_modifiers = static

dotnet_naming_symbols.enumerazione.applicable_kinds = enum
dotnet_naming_symbols.enumerazione.applicable_accessibilities = public, internal, private, protected, protected_internal
dotnet_naming_symbols.enumerazione.required_modifiers = 

dotnet_naming_symbols.metodo.applicable_kinds = method
dotnet_naming_symbols.metodo.applicable_accessibilities = public, internal, private, protected, protected_internal
dotnet_naming_symbols.metodo.required_modifiers = abstract, async, readonly, static

dotnet_naming_symbols.metodo_privato.applicable_kinds = method
dotnet_naming_symbols.metodo_privato.applicable_accessibilities = private
dotnet_naming_symbols.metodo_privato.required_modifiers = 

dotnet_naming_symbols.metodo_astratto.applicable_kinds = method
dotnet_naming_symbols.metodo_astratto.applicable_accessibilities = public, internal, private, protected, protected_internal
dotnet_naming_symbols.metodo_astratto.required_modifiers = abstract

dotnet_naming_symbols.proprietà.applicable_kinds = property
dotnet_naming_symbols.proprietà.applicable_accessibilities = public, internal, private, protected, protected_internal
dotnet_naming_symbols.proprietà.required_modifiers = 

dotnet_naming_symbols.campo_privato_o_interno.applicable_kinds = field
dotnet_naming_symbols.campo_privato_o_interno.applicable_accessibilities = internal, private
dotnet_naming_symbols.campo_privato_o_interno.required_modifiers = readonly

dotnet_naming_symbols.tipi.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.tipi.applicable_accessibilities = public, internal, private, protected, protected_internal
dotnet_naming_symbols.tipi.required_modifiers = 

dotnet_naming_symbols.membri_non_di_campo.applicable_kinds = property, event, method
dotnet_naming_symbols.membri_non_di_campo.applicable_accessibilities = public, internal, private, protected, protected_internal
dotnet_naming_symbols.membri_non_di_campo.required_modifiers = 

dotnet_naming_symbols.campo_costante.applicable_kinds = field
dotnet_naming_symbols.campo_costante.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.campo_costante.required_modifiers = const, static

# Naming styles

dotnet_naming_style.pascalcase.required_prefix = 
dotnet_naming_style.pascalcase.required_suffix = 
dotnet_naming_style.pascalcase.word_separator = 
dotnet_naming_style.pascalcase.capitalization = pascal_case

dotnet_naming_style.inizia_con_i.required_prefix = I
dotnet_naming_style.inizia_con_i.required_suffix = 
dotnet_naming_style.inizia_con_i.word_separator = 
dotnet_naming_style.inizia_con_i.capitalization = pascal_case

dotnet_naming_style._globalfield.required_prefix = _
dotnet_naming_style._globalfield.required_suffix = 
dotnet_naming_style._globalfield.word_separator = 
dotnet_naming_style._globalfield.capitalization = camel_case

dotnet_naming_style.costants_name.required_prefix = 
dotnet_naming_style.costants_name.required_suffix = 
dotnet_naming_style.costants_name.word_separator = _
dotnet_naming_style.costants_name.capitalization = all_upper

# 31/08/2022 Emanuele Cellini: controllo rimosso perchè abbiamo attivato l'antiForgery per tutti gli endpoint
# questo controllo segnalava dei falsi positivi su dei metodi POST senza dati (esempio ApplicationController.Heartbeat)
# SCS0016: Controller method is potentially vulnerable to Cross Site Request Forgery (CSRF).
dotnet_diagnostic.SCS0016.severity = none